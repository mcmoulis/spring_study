<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch 
		http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		">

	<import resource="context.xml" />

	<bean id="domain" class="com.mcms.study.spring.batch.interceptor.Domain" />

	<bean id="fileDeletingTasklet"
		class="com.mcms.study.spring.batch.interceptor.tasklet.FileDeletingTasklet">
		<property name="directory" value="file:src/test/resources/data/output" />
	</bean>

	<bean id="customSkipListener"
		class="com.mcms.study.spring.batch.interceptor.listeners.CustomSkipListener" />
	<bean id="customStepListener"
		class="com.mcms.study.spring.batch.interceptor.listeners.CustomStepListener" />
	<bean id="customItemReaderListener"
		class="com.mcms.study.spring.batch.interceptor.listeners.CustomItemReaderListener" />
	<bean id="customItemWriterListener"
		class="com.mcms.study.spring.batch.interceptor.listeners.CustomItemWriterListener" />

	<job id="readMultipleFileJob" xmlns="http://www.springframework.org/schema/batch">
		<step id="readMultipleFileStep" > <!-- next="deleteDir" --> 
			<tasklet>
				<chunk reader="multipleResourceReader" writer="flatFileItemWriter"
					commit-interval="10" skip-limit="10">
					<skippable-exception-classes>
						<include class="java.lang.Exception" />
					</skippable-exception-classes>
					<listeners>
						<listener ref="customSkipListener" />
					</listeners>
				</chunk>
				<listeners>
					<listener ref="customStepListener" />
					<listener ref="customItemReaderListener" />
					<listener ref="customItemWriterListener" />
				</listeners>
			</tasklet>
		</step>
		<!-- <step id="deleteDir"> <tasklet ref="fileDeletingTasklet" /> </step> -->
	</job>

	<bean id="multipleResourceReader"
		class=" org.springframework.batch.item.file.MultiResourceItemReader">
		<property name="resources" value="file:src/test/resources/data/input/domainx-*.csv" />
		<property name="delegate" ref="flatFileItemReader" />
	</bean>

	<bean id="flatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">

		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="id, domain" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean
						class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="domain" />
					</bean>
				</property>
			</bean>
		</property>

	</bean>

	<bean id="flatFileItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">

		<property name="resource" value="file:src/test/resources/data/output/domain.all.csv" />
		<property name="appendAllowed" value="true" />
		<property name="lineAggregator">
			<bean
				class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter" value="," />
				<property name="fieldExtractor">
					<bean
						class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names" value="id, domain" />
					</bean>
				</property>
			</bean>
		</property>

	</bean>

</beans>